// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Yard_Management_System;

#nullable disable

namespace YardManagementSystem.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230209190731_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Yard_Management_System.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("746bc655-b82d-466e-b41c-b74f962454dd"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("209412f9-e99d-41ee-9d67-5cbd49ecca0e"),
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Yard_Management_System.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId")
                        .IsUnique();

                    b.HasIndex("Login", "Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05aafbb2-4d6a-4fcc-a12a-150089b2a8b1"),
                            Email = "tom@gmail.com",
                            IsActive = false,
                            Login = "tom123",
                            Password = "12345",
                            PhoneNumber = "89169436523",
                            RoleId = new Guid("746bc655-b82d-466e-b41c-b74f962454dd")
                        },
                        new
                        {
                            Id = new Guid("6a2b6bf0-8f62-488a-8b00-d8f95128f5dc"),
                            Email = "alice@gmail.com",
                            IsActive = false,
                            Login = "alice321",
                            Password = "54321",
                            PhoneNumber = "89267434513",
                            RoleId = new Guid("209412f9-e99d-41ee-9d67-5cbd49ecca0e")
                        });
                });

            modelBuilder.Entity("Yard_Management_System.Models.User", b =>
                {
                    b.HasOne("Yard_Management_System.Models.Role", "Role")
                        .WithOne("User")
                        .HasForeignKey("Yard_Management_System.Models.User", "RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Yard_Management_System.Models.Role", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
